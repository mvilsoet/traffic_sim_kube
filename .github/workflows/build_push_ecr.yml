name: Deploy Project to EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  provision-aws:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt-get update && sudo apt-get install terraform

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform

    - name: Provision AWS resources
      run: terraform apply -auto-approve
      working-directory: ./terraform

  generate-initial-state:
    needs: provision-aws
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Generate and Upload Initial State to S3
      run: python scripts/initial_state.py

  build-and-push:
    needs: generate-initial-state
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push images to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker-compose build
        for service in simcore agentmodule trafficmodule vizmodule; do
          docker push $ECR_REGISTRY/${service}:$IMAGE_TAG
        done

    # - name: Update EKS deployments
    #   run: |
    #     aws eks get-token --cluster-name your-cluster-name | kubectl apply -f -
    #     for service in simcore agentmodule trafficmodule vizmodule; do
    #       kubectl set image deployment/${service} ${service}=$ECR_REGISTRY/${service}:$IMAGE_TAG
    #     done
    #   env:
    #     KUBECONFIG: ${{ secrets.KUBECONFIG }}