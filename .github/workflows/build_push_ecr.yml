name: Build and Push to ECR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [simCore, agentModule, trafficModule, vizModule]

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/${{ matrix.service }}:$IMAGE_TAG -f traffic_simulation/utils/${{ matrix.service }}.Dockerfile
        docker push $ECR_REGISTRY/${{ matrix.service }}:$IMAGE_TAG

    - name: Update EKS deployment
      run: |
        aws eks get-token --cluster-name your-cluster-name | kubectl apply -f -
        kubectl set image deployment/${{ matrix.service }} ${{ matrix.service }}=$ECR_REGISTRY/${{ matrix.service }}:$IMAGE_TAG
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}